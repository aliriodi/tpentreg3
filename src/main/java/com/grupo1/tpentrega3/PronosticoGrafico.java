/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.grupo1.tpentrega3;
import static com.grupo1.tpentrega3.TP.PRODE;

/**
 *
 * @author aliri
 */
public class PronosticoGrafico extends javax.swing.JFrame {
 private ListaEquipos equipos;
 private ListaPartidos partidos;
 private ListaParticipantes participantes;
 private ListaPronosticos pronosticos;
    /**
     * Creates new form PronosticoGrafico
     */
    public PronosticoGrafico() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        salida = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        result = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFont(new java.awt.Font("Algerian", 0, 48)); // NOI18N

        jDesktopPane1.setLayout(new java.awt.BorderLayout());

        jLabel1.setBackground(new java.awt.Color(204, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Interfaz Grafica Grupo 1  -  Pronostico Deportivo");
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), java.awt.Color.darkGray, java.awt.Color.lightGray, java.awt.Color.white));

        jButton1.setText("Play");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        salida.setColumns(20);
        salida.setRows(5);
        salida.setText("Al iniciar Play en este menu podemos observar los\nresultados a pasos de nuestro programa");
        jScrollPane2.setViewportView(salida);

        result.setColumns(20);
        result.setRows(5);
        result.setText("Esperando porque Ud. aprete el boton de Play ....");
        jScrollPane1.setViewportView(result);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 
 equipos = new ListaEquipos();
 partidos = new ListaPartidos();
 participantes = new ListaParticipantes();
 pronosticos = new ListaPronosticos();
 equipos.cargarDeBD();
 String e = equipos.listar();
 partidos.cargarDeBD(equipos);
 String p0 = partidos.listar();
 participantes.cargarDeBD();
 String p1 = participantes.listar();
 
  for (Participante p : participantes.getParticipantes()) {
            p.cargarPronosticosBD(equipos, partidos);
        }
  String p2=participantes.listar();
  String p3= "";
     for (Participante participante : participantes.getParticipantes()) {
            switch (participante.getNombre().length()) {
                case 17:
                    p3+=participante.getNombre() + "         " + participante.resultados()+"\n";
                    //System.out.println(participante.getNombre() + "         " + participante.resultados());
                     
                    break;
                case 16:
                    p3+=participante.getNombre() + "              " + participante.resultados()+"\n";
                    //System.out.println(participante.getNombre() + "          " + participante.resultados());
                    break;
                case 15:
                    p3+=participante.getNombre() + "               " + participante.resultados()+"\n";
                    //System.out.println(participante.getNombre() + "           " + participante.resultados());
                    break;
                case 14:
                    p3+=participante.getNombre()+ "                  " + participante.resultados()+"\n";
                   // System.out.println(participante.getNombre() + "            " + participante.resultados());
                    break;
                case 13:
                    p3+=participante.getNombre() + "                   " + participante.resultados()+"\n";
                    //System.out.println(participante.getNombre() + "             " + participante.resultados());
                    break;
                default:
                    System.out.println(participante.getNombre() + participante.getNombre().length() + "       " + participante.resultados());
                    break;
            }
        }
     String p4= "";
     for (Participante participante : participantes.getOrdenadosPorPuntaje()) {

            switch (participante.getNombre().length()) {
               case 17:
                    p4+=participante.getNombre() + "         " + participante.resultados()+"\n";
                    //System.out.println(participante.getNombre() + "         " + participante.resultados());
                     
                    break;
                case 16:
                    p4+=participante.getNombre() + "              " + participante.resultados()+"\n";
                    //System.out.println(participante.getNombre() + "          " + participante.resultados());
                    break;
                case 15:
                    p4+=participante.getNombre() + "               " + participante.resultados()+"\n";
                    //System.out.println(participante.getNombre() + "           " + participante.resultados());
                    break;
                case 14:
                    p4+=participante.getNombre()+ "                  " + participante.resultados()+"\n";
                   // System.out.println(participante.getNombre() + "            " + participante.resultados());
                    break;
                case 13:
                    p4+=participante.getNombre() + "                   " + participante.resultados()+"\n";
                    //System.out.println(participante.getNombre() + "             " + participante.resultados());
                    break;
                default:
                    System.out.println(participante.getNombre() + participante.getNombre().length() + "       " + participante.resultados());
                    break;
            }
        }
     String p5= "";
         for (Participante participante : participantes.getOrdenadosPorPuntaje()) {
            if (participante.resultados() == participantes.getOrdenadosPorPuntaje().get(0).resultados()) {

                switch (participante.getNombre().length()) {
                      case 17:
                    p5+=participante.getNombre() + "         " + participante.resultados()+"\n";
                    //System.out.println(participante.getNombre() + "         " + participante.resultados());
                     
                    break;
                case 16:
                    p5+=participante.getNombre() + "              " + participante.resultados()+"\n";
                    //System.out.println(participante.getNombre() + "          " + participante.resultados());
                    break;
                case 15:
                    p5+=participante.getNombre() + "               " + participante.resultados()+"\n";
                    //System.out.println(participante.getNombre() + "           " + participante.resultados());
                    break;
                case 14:
                    p5+=participante.getNombre()+ "                  " + participante.resultados()+"\n";
                   // System.out.println(participante.getNombre() + "            " + participante.resultados());
                    break;
                case 13:
                    p5+=participante.getNombre() + "                   " + participante.resultados()+"\n";
                    //System.out.println(participante.getNombre() + "             " + participante.resultados());
                    break;
                    default:
                        System.out.println(participante.getNombre() + participante.getNombre().length() + "       " + participante.resultados());
                    
                        break;
                }
            }
        }
     
     
 result.setText("Cargando Equipos \n"+e+"\n"+"\n Cargando Partidos"+p0+"\nCargando Participantes SIN PRONOSTICOS \n"+p1+
                 "\n \n Cargando Participantes CON PRONOSTICOS\n"+p2+"\n"+
                 "\n \n Cargando Participantes con Resultados Ordenados por IDParticipante \n"
                 +"\n"+"Nombre                     Puntos \n"+p3+"\n"+
                 "Cargando Participantes Ordenados por metodo participantes.getordenado()\n"+        
                  "\n"+"Nombre                     Puntos \n"+p4+"\n"+
                  "Cargando el Ganador o Ganadores\n"+
                  "\n"+"Nombre                     Puntos \n"+p5+"\n" );
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PronosticoGrafico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PronosticoGrafico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PronosticoGrafico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PronosticoGrafico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PronosticoGrafico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea result;
    private javax.swing.JTextArea salida;
    // End of variables declaration//GEN-END:variables
}
